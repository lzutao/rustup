(function() {var implementors = {};
implementors["bytes"] = [{"text":"impl UpperHex for Bytes","synthetic":false,"types":[]},{"text":"impl UpperHex for BytesMut","synthetic":false,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T:&nbsp;ArrayLength&lt;u8&gt;&gt; UpperHex for GenericArray&lt;u8, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Add&lt;T&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Add&lt;T&gt;&gt;::Output: ArrayLength&lt;u8&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl UpperHex for BigInt","synthetic":false,"types":[]},{"text":"impl UpperHex for BigUint","synthetic":false,"types":[]}];
implementors["num_bigint_dig"] = [{"text":"impl UpperHex for BigInt","synthetic":false,"types":[]},{"text":"impl UpperHex for BigUint","synthetic":false,"types":[]}];
implementors["openssl"] = [{"text":"impl UpperHex for CMSOptions","synthetic":false,"types":[]},{"text":"impl UpperHex for OcspFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for Pkcs7Flags","synthetic":false,"types":[]},{"text":"impl UpperHex for SslOptions","synthetic":false,"types":[]},{"text":"impl UpperHex for SslMode","synthetic":false,"types":[]},{"text":"impl UpperHex for SslVerifyMode","synthetic":false,"types":[]},{"text":"impl UpperHex for SslSessionCacheMode","synthetic":false,"types":[]},{"text":"impl UpperHex for ExtensionContext","synthetic":false,"types":[]},{"text":"impl UpperHex for ShutdownState","synthetic":false,"types":[]},{"text":"impl UpperHex for X509CheckFlags","synthetic":false,"types":[]}];
implementors["pulldown_cmark"] = [{"text":"impl UpperHex for Options","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; UpperHex for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: UpperHex,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; UpperHex for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: UpperHex,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()