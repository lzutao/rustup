name: CI
on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v1
      - name: Install Rust
        run: |
          sh ./rustup-init.sh -y --default-toolchain=stable --profile=minimal
          # FIXME: Do not update it unless we want Rust newer features
          # $HOME/.cargo/bin/rustup update --no-self-update stable
          echo "##[add-path]$HOME/.cargo/bin"
        shell: bash
      - name: Build and test
        env:
          TARGET: ${{ matrix.target }}
        run: |
          mkdir -p target/"$TARGET"
          case "$TARGET" in
            *-linux-android*) DOCKER=android   ;; # Android uses a local docker image
            *-apple-darwin)                    ;;
            *-pc-windows-*)                    ;;
            *)                DOCKER="$TARGET" ;;
          esac
          if [ -n "$DOCKER" ]; then
            bash ci/build-run-docker.bash "$DOCKER" "$TARGET" "$SKIP_TESTS"
          else
            bash ci/run.bash
          fi
        shell: bash
