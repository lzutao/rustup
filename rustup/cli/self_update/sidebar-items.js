initSidebarItems({"constant":[["NEVER_SELF_UPDATE",""]],"fn":[["_install_selection",""],["canonical_cargo_home","`CARGO_HOME` suitable for display, possibly with $HOME substituted for the directory prefix"],["check_existence_of_rustc_or_cargo_in_path",""],["cleanup_self_updater",""],["current_install_opts",""],["customize_install",""],["delete_rustup_and_cargo_home",""],["do_pre_install_options_sanity_checks",""],["do_pre_install_sanity_checks",""],["get_new_rustup_version",""],["install","Installing is a simple matter of copying the running binary to `CARGO_HOME`/bin, hard-linking the various Rust tools to it, and adding `CARGO_HOME`/bin to PATH."],["install_bins",""],["install_proxies",""],["maybe_install_rust",""],["parse_new_rustup_version",""],["pre_install_msg",""],["prepare_update",""],["run_update","Tell the upgrader to replace the rustup bins, then delete itself. Like with uninstallation, on Windows we're going to have to jump through hoops to make everything work right."],["rustc_or_cargo_exists_in_path",""],["self_replace","This function is as the final step of a self-upgrade. It replaces `CARGO_HOME`/bin/rustup with the running exe, and updates the the links to it. On windows this will run after the original rustup process exits."],["uninstall",""],["update","Self update downloads rustup-init to `CARGO_HOME`/bin/rustup-init and runs it."]],"mod":[["os",""],["shell","Paths and Unix shells"],["test","Support for functional tests."],["unix",""]],"static":[["UPDATE_ROOT",""]],"struct":[["InstallOpts",""]]});